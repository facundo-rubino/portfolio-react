import Head from 'next/head'
import { useState } from 'react'

import { BsFillMoonStarsFill } from 'react-icons/bs'
import { FaGithub, FaLinkedin } from "react-icons/fa";
import { techs, experience, experiencia, education, educacion } from '../public/utils'
import { TypeAnimation } from 'react-type-animation'
import useReadingProgress from '../hooks/useReadingProgress'
import Image from "next/image";
import WebLottie from "../public/webLottie.json";
import Lottie from "lottie-react";

import facu from "../public/Dibujo_sFondoBN.png";
import Melinder2 from "../public/melinderPortfolio.jpg";

export default function Home() {
  const [darkMode, setDarkMode] = useState(true);
  const [Lang, setLang] = useState(`ESP`)
  const languageHandler = () => Lang === `ESP` ? setLang('ENG') : setLang('ESP');
  const readingProgress = useReadingProgress();
  const sequenceEsp = [
    'Soy diseñador multimedia.',
    2000,
    'Soy desarrollador fullstack.',
    2000,
    'Soy diseñador web.',
    2000,
  ]
  const sequenceEng = [
    'Soy Aaaaa',
    2000,
    'Soy aaaa fullstack.',
    2000,
    'Soy aaa web.',
    2000,
  ]

  return (
    <div className={darkMode ? "dark" : ""}>
      <Head>
        <title>Facundo Rubino Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <span
        style={{ transform: `translateX(${readingProgress - 100}%)` }}
        className="z-10 fixed top-0 bg-gradient-to-r from-orange-300 to-orange-500 h-2 w-full bottom-0"
      />
      <main className="bg-white md:px-10 lg:px-15 dark:bg-gray-900 transition-all ">
        <section className="mb-10">
          <nav className="px-3 pt-6 grid justify-items-end">
            <ul className="flex">
              <li>
                <BsFillMoonStarsFill onClick={() => setDarkMode(!darkMode)} className="cursor-pointer text-2xl dark:text-slate-200" />
              </li>
              <li><a onClick={() => languageHandler()} className="bg-gradient-to-r from-orange-300 to-orange-500 text-white px-4 py-2 rounded-md ml-4 cursor-pointer" >{Lang}</a></li>
            </ul>
          </nav>
          <nav className="px-3 pt-6 grid justify-items-center">
            <ul className="cursor-pointer flex gap-4 text-2xl font-semibold uppercase text-transparent bg-clip-text bg-gradient-to-r from-orange-300 to-orange-500" >
              <li>
                {Lang == `ESP` ? 'Tecnologías' : 'technologies'}
              </li>
              <li>
                {Lang == `ESP` ? 'Experiencia' : 'Experience'}
              </li>
              <li>
                Portfolio
              </li>
            </ul>
          </nav>
          {/* Hero */}



          <section className="hero flex h-screen justify-evenly ">
            <div className=' h-4/5 w-11/12 md:w-6/12 content-center'>
              <div className="p-5">

                <h2 className="text-5xl font-black uppercase text-transparent bg-clip-text bg-gradient-to-r from-orange-300 to-orange-500">
                  <span className="gradient-text">Facu</span><span className="text-transparent bg-clip-text bg-white">ndo Rubino</span>.
                </h2>
                <TypeAnimation
                  sequence={Lang == `ESP` ? sequenceEsp : sequenceEng}
                  wrapper="h2"
                  speed={50}
                  style={{
                    fontSize: '1.5rem',
                    fontWeight: '300',
                    color: 'white'
                  }}
                  repeat={Infinity}
                />
                <p className="text-md pt-3 leading-7 text-gray-800 dark:text-slate-200 m-auto ">
                  {Lang == `ESP` ?
                    `La combinación de la programación con las artes gráficas siempre fue algo que me interesó. Busco crear una armonía visual donde prevalezca el detallista que me caracteriza, brindando una solución funcional y original.
                  En mis procesos creativos intento siempre basarme en una buena estructura y organización de la pieza, combinado con un buen dominio del layout, para tener el control sobre el objetivo a realizar, con el fin de genera un producto final dinámico, entendible y atractivo.`
                    : `Abstract.`}
                </p>
                <div class="relative group mt-4 ">
                  <div class="absolute -inset-0.5 bg-gradient-to-r from-orange-300 to-orange-500 rounded-lg blur opacity-75 group-hover:opacity-100 transition duration-1000 group-hover:duration-200 animate-tilt w-1/6 "></div>
                  <button class="relative px-7 py-4 bg-black rounded-lg leading-none divide-x divide-gray-600 ">
                    <span class="text-md text-gray-100 group-hover:text-orange-400 transition duration-200 ">Contactame   &rarr;</span>
                  </button>
                </div>
              </div>
              <div className="text-2xl flex gap-6 text-gray-500">
                <a href="https://www.linkedin.com/in/facundo-rubino/" target="_blank"><FaLinkedin /></a>
                <a href="https://github.com/facundo-rubino" target="_blank"><FaGithub /></a>
              </div>
            </div>
            <div className="flex items-center justify-center h-4/5  ">
              <div className="relative mx-auto bg-gradient-to-b from-transparent rounded-full w-60 h-60 mt-5 overflow-hidden content-center">
                <Image src={facu} className="ml-6 mt-3" layout="" objectFit="" />
              </div>
            </div>
          </section>







        </section>

        <section className="flex">
          <div className="flex justify-between">
            <div className="-my-6 w-5/12">
              <h3 className="text-xl font-normal pt-10 pl-8 sm:pl-32 text-slate-900 dark:text-slate-200">| Experiencia</h3>
              {Lang == `ESP` ?
                experiencia.map((exp, index) => (
                  <div className="relative pl-8 sm:pl-32 py-6 group">
                    <div className="gradient-text font-black text-lg mb-1 sm:mb-0">{exp.title}</div>
                    <div className="flex flex-col sm:flex-row items-start mb-1 group-last:before:hidden before:absolute before:left-2 sm:before:left-0 before:h-full before:px-px before:bg-slate-300 sm:before:ml-[6.5rem] before:self-start before:-translate-x-1/2 before:translate-y-3 after:absolute after:left-2 sm:after:left-0 after:w-2 after:h-2 after:bg-orange-500 after:border-4 after:box-content after:border-slate-50 after:rounded-full sm:after:ml-[6.5rem] after:-translate-x-1/2 after:translate-y-1.5">
                      <time className="sm:absolute left-0 translate-y-0.5 inline-flex items-center justify-center text-xs font-semibold uppercase w-20 h-6 mb-3 sm:mb-0 text-emerald-600 bg-emerald-100 rounded-full">{exp.date}</time>
                      <div className="text-sm uppercase font-semibold text-slate-900 dark:text-slate-200">{exp.company}</div>
                    </div>
                    <div className="text-slate-900 dark:text-slate-400">{exp.description}</div>
                  </div>
                ))
                :
                experience.map((exp, index) => (
                  <div className="relative pl-8 sm:pl-32 py-6 group">
                    <div className="gradient-text font-black text-lg mb-1 sm:mb-0">{exp.title}</div>
                    <div className="flex flex-col sm:flex-row items-start mb-1 group-last:before:hidden before:absolute before:left-2 sm:before:left-0 before:h-full before:px-px before:bg-slate-300 sm:before:ml-[6.5rem] before:self-start before:-translate-x-1/2 before:translate-y-3 after:absolute after:left-2 sm:after:left-0 after:w-2 after:h-2 after:bg-orange-500 after:border-4 after:box-content after:border-slate-50 after:rounded-full sm:after:ml-[6.5rem] after:-translate-x-1/2 after:translate-y-1.5">
                      <time className="sm:absolute left-0 translate-y-0.5 inline-flex items-center justify-center text-xs font-semibold uppercase w-20 h-6 mb-3 sm:mb-0 text-emerald-600 bg-emerald-100 rounded-full">{exp.date}</time>
                      <div className="uppercase  text-sm font-bold text-slate-900 dark:text-slate-200">{exp.company}</div>
                    </div>
                    <div className="text-slate-900 dark:text-slate-400">{exp.description}</div>
                  </div>
                ))
              }
            </div>
            <div className="-my-6 w-5/12">
              <h3 className="text-xl font-normal pt-10 pl-8 sm:pl-32 text-slate-900 dark:text-slate-200 ">| Educación</h3>
              {Lang == `ESP` ?
                educacion.map((edu, index) => (
                  <div className="relative pl-8 sm:pl-32 py-6 group">
                    <div className="gradient-text font-black text-lg mb-1 sm:mb-0">{edu.title}</div>
                    <div className="flex flex-col sm:flex-row items-start mb-1 group-last:before:hidden before:absolute before:left-2 sm:before:left-0 before:h-full before:px-px before:bg-slate-300 sm:before:ml-[6.5rem] before:self-start before:-translate-x-1/2 before:translate-y-3 after:absolute after:left-2 sm:after:left-0 after:w-2 after:h-2 after:bg-orange-500 after:border-4 after:box-content after:border-slate-50 after:rounded-full sm:after:ml-[6.5rem] after:-translate-x-1/2 after:translate-y-1.5">
                      <time className="sm:absolute left-0 translate-y-0.5 inline-flex items-center justify-center text-xs font-semibold uppercase w-20 h-6 mb-3 sm:mb-0 text-emerald-600 bg-emerald-100 rounded-full">{edu.date}</time>
                      <div className="text-sm uppercase font-semibold text-slate-900 dark:text-slate-200">{edu.company}</div>
                    </div>
                    <div className="text-slate-900 dark:text-slate-400">{edu.description}</div>
                  </div>
                ))
                :
                education.map((edu, index) => (
                  <div className="relative pl-8 sm:pl-32 py-6 group">
                    <div className="gradient-text font-black text-lg mb-1 sm:mb-0">{edu.title}</div>
                    <div className="flex flex-col sm:flex-row items-start mb-1 group-last:before:hidden before:absolute before:left-2 sm:before:left-0 before:h-full before:px-px before:bg-slate-300 sm:before:ml-[6.5rem] before:self-start before:-translate-x-1/2 before:translate-y-3 after:absolute after:left-2 sm:after:left-0 after:w-2 after:h-2 after:bg-orange-500 after:border-4 after:box-content after:border-slate-50 after:rounded-full sm:after:ml-[6.5rem] after:-translate-x-1/2 after:translate-y-1.5">
                      <time className="sm:absolute left-0 translate-y-0.5 inline-flex items-center justify-center text-xs font-semibold uppercase w-20 h-6 mb-3 sm:mb-0 text-emerald-600 bg-emerald-100 rounded-full">{edu.date}</time>
                      <div className="uppercase text-sm font-bold text-slate-900 dark:text-slate-200">{edu.company}</div>
                    </div>
                    <div className="text-slate-900 dark:text-slate-400">{edu.description}</div>
                  </div>
                ))
              }
            </div>




          </div>

        </section>

        {/* Proceso */}
        <section className="flex justify-around items-center">
          <div className="flex flex-col w-2/3 pl-20">
            <h2>  {Lang == `ESP` ? 'Confiar en el proceso' : 'Trust the process'}  </h2>
            <h3 > {Lang == `ESP` ? 'Diseño UX-UI' : 'UX/UI Design'} </h3>
            <p > {Lang == `ESP` ? 'Para llegar a los resultados deseados, es necesario cumplir con todas las etapas previas de diseño requeridas' : 'Trust the process'}  </p>
          </div>
          <div className="w-1/3">
            <Lottie animationData={WebLottie} />
          </div>
        </section>

        {/* Tools */}
        <section>
          <div>
            <h3 className="text-4xl font-extrabold text-center text-transparent bg-clip-text bg-gradient-to-r uppercase from-orange-300 to-orange-500">{Lang === `ESP` ? `Tecnologías que manejo` : `Technological Expertise`}</h3>
            <p className="text-center dark:text-slate-200 py-3">{Lang === `ESP` ? `A lo largo de los años fui desarrollando nuevas habilidades` : `Over the years, I have cultivated a diverse skill set.`}</p>
          </div>
          {/* Tools container */}
          <div className="flex flex-wrap mb-5 w-10/12 justify-center items-center m-auto md:w-6/12">
            {techs.map((tech, index) => (
              <div className="flex-shrink-0 p-2">
                <div className="bg-slate-100 rounded-md p-2">
                  {tech.name}
                </div>
              </div>
            ))}
          </div>
        </section>

        {/* {Frase} */}
        <section className="flex items-center justify-center h-96 bg-fixed bg-parallax bg-cover ">
          <h1 className='text-5xl text-white uppercase'>FRASE?</h1>
          <h1 className='text-5xl text-white uppercase'>FRASE?   DISENO MUTLIEMDIA Y ATI</h1>

        </section>






        {/* Portfolio */}
        <section>
          <h3 className="text-3xl pt-10 uppercase font-medium text-transparent bg-clip-text bg-gradient-to-r from-orange-300 to-orange-500 text-center ">Portfolio</h3>

          {/* Portfolio container */}
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-5 py-10 lg:flex-row lg:flex-wrap">
            <div className="shadow-xl w-11/12 m-auto ">
              <a href="https://melinder-app.vercel.app/" target="_blank"> <Image src={Melinder2} className="rounded-lg object-fill shadow-sm cursor-pointer" width={'100%'} height={'100%'} layout="responsive" /></a>
            </div>
          </div>
        </section>
      </main>
    </div >
  );
}
